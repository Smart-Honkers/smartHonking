[General]
network = smartHonk

#--------------------------------
# Application Layer configuration
#--------------------------------
**.arp.typename = "GlobalArp"
*.vehicle*.numApps = 1

#---------------------------------
# P A R A M E T E R S to be set 
#---------------------------------

*.nodeProb=${nodeprob=0.85}
*.gridRows=${rows=3}
*.gridColumns=${columns=2}

#---------------------------------
#*.vehicle*.app[0].numOfHosts = 100




#*.vehicle*.app[0].numOfHosts = 100
*.vehicle[0..3].app[0].typename = "pairNeighborCars"
*.vehicle*.app[0].destPort = 1025
*.vehicle*.app[0].localPort = 1025
*.vehicle*.app[0].messageLength = 20B
*.vehicle[0..3].app[0].packetName = "smartHonking"


*.vehicle[4].app[0].typename = "ambulance"
*.vehicle[4].app[0].packetName = "ambulance_alert"

#*.vehicle[0].app[0].broadcastInterval = exponential(2ms)

# The reponse delay specifies the vehicle to start responding to the sink vehicle after this delay and interval between each response
*.vehicle[1..20].app[0].responseDelay = exponential(800ms)
*.vehicle[21..40].app[0].responseDelay = exponential(700ms)
*.vehicle[41..60].app[0].responseDelay = exponential(600ms)
*.vehicle[61..80].app[0].responseDelay = exponential(500ms)
*.vehicle[81..99].app[0].responseDelay = exponential(400ms)
*.vehicle[100..200].app[0].responseDelay = exponential(300ms)
*.vehicle[201..300].app[0].responseDelay = exponential(65ms)
*.vehicle[301..500].app[0].responseDelay = exponential(75ms)
*.vehicle[501..*].app[0].responseDelay = exponential(85ms)

*.vehicle[0].app[0].timeToLive = ${rows} + ${columns}
*.vehicle[1..*].app[0].timeToLive = ${rows} + ${columns}
*.vehicle*.app[0].receiveBroadcast = true
**.forceBroadcast = true

*.vehicle*.mobility.typename="carNetwork"
*.vehicle*.mobility.rows=${rows}
*.vehicle*.mobility.columns=${columns}
*.vehicle*.mobility.marginX=150m
*.vehicle*.mobility.marginY=150m
*.vehicle*.mobility.separationX=100m
*.vehicle*.mobility.separationY=100m
*.vehicle*.mobility.constraintAreaMinX=10m
*.vehicle*.mobility.constraintAreaMinY=10m
*.vehicle*.mobility.nodeprob=${nodeprob}

**.numWlanInterfaces = 2
#*.vehicle*.wlan[*].typename = "AckingWirelessInterface"
*.vehicle*.wlan[*].typename = "Ieee802154NarrowbandInterface"
*.vehicle*.wlan[*].mac.useAck = false
*.vehicle*.wlan[*].mac.fullDuplex = false
*.vehicle*.wlan[*].radio.transmitter.communicationRange = 50m
*.vehicle*.wlan[*].radio.receiver.ignoreInterference = true
*.vehicle*.wlan[*].radio.displayCommunicationRange = true

# visualizers for good simulation 
*.visualizer.sceneVisualizer.descriptionFigure = "title"
*.visualizer.mediumVisualizer.displaySignals = true
#*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

*.vehicle*.**.bitrate = 1Mbps

#------------

*.vehicle*.forwarding = true
*.configurator.config = xmldoc("smartHonk.xml")
*.configurator.optimizeRoutes = false
*.vehicle*.ipv4.routingTable.netmaskRoutes = ""

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.dataLinkVisualizer.displayLinks = true
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.*LinkVisualizer.lineShift = 0
*.visualizer.networkRouteVisualizer.lineShift = 0
*.visualizer.networkRouteVisualizer.packetFilter = "UDPData*"

#--------------------------
# Energy consumption
#----------------------------
*.vehicle*.wlan[*].radio.energyConsumer.typename = "StateBasedEpEnergyConsumer"
*.vehicle*.wlan[*].radio.energyConsumer.offPowerConsumption = 0mW
*.vehicle*.wlan[*].radio.energyConsumer.sleepPowerConsumption = 1mW
*.vehicle*.wlan[*].radio.energyConsumer.switchingPowerConsumption = 1mW
*.vehicle*.wlan[*].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.vehicle*.wlan[*].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.vehicle*.wlan[*].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.vehicle*.wlan[*].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
*.vehicle*.wlan[*].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW

*.vehicle*.energyStorage.typename = "IdealEpEnergyStorage"




